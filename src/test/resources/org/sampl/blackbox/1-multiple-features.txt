/*
name: multiple-features
types: PIPELINE, INTERPRETATION_WITH_EXPECTED_RESULT
expected-result: 42
*/

val implication = { (a: String) -> 5 }
fun <A, B> modusPonens(f: (A) -> B, v: A): B = f(v)

// Function Application
fun constant5Impl1(v: String): Int = implication(v)
fun constant5Impl2(v: String): Int = modusPonens(implication, v)
fun applyWithString(): Int = constant5Impl2("hi")

// Currying
fun add1(b: Int): Int = add(1)(b)
fun add(a: Int, b: Int): Int = a + b

// Main
fun main(): Int = add1(41)
